version: '3.7'

services:
  helloworld:
    deploy:
      endpoint_mode: vip
      labels:
        # Tell Traefik to get the contents provided by this service using that shared network.
        - "traefik.docker.network=traefik-public"
        # Allow internet exposition (publish on port 80)
        - "traefik.enable=true"
        
        ## HTTPS router specifications

        # Entrypoint
        - "traefik.http.routers.https_testMasamuneFr_Helloworld_Router.entrypoints=websecure"
        # On which url ? Reverse proxy regexp
        - "traefik.http.routers.https_testMasamuneFr_Helloworld_Router.rule=Host(`test.masamune.fr`)"
        # Use the service created below specifying the internal port
        - "traefik.http.routers.https_testMasamuneFr_Helloworld_Router.service=https_testMasamuneFr_Helloworld_Service"
        # Enable TLS
        - "traefik.http.routers.https_testMasamuneFr_Helloworld_Router.tls=true"
        # Automatic generation on all subdomains, using SANs
        - "traefik.http.routers.https_testMasamuneFr_Helloworld_Router.tls.domains[0].main=masamune.fr"
        - "traefik.http.routers.https_testMasamuneFr_Helloworld_Router.tls.domains[0].sans=*.masamune.fr"
        # Automtic certifcate resolver, created in traefik.yml
        - "traefik.http.routers.https_testMasamuneFr_Helloworld_Router.tls.certresolver=leresolver"
        
        # Create a service specifying the internal port
        - "traefik.http.services.https_testMasamuneFr_Helloworld_Service.loadbalancer.server.port=80"

        ## HTTP_ router specifications
        #     Redirect every http requests to their https equivalent

        # Create a middleware to redirect http to https
        #     Middleware aren't shared ?
        - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
        # All hosts..
        - "traefik.http.routers.http_testMasamuneFr_Helloworld_Router.rule=hostregexp(`{host:.+}`)"
        ## https://doc.traefik.io/traefik/routing/routers/#rule > HostRegexp !?? Forcer redrection www. vers https
        # - "traefik.http.routers.http_testMasamuneFr_Helloworld_Router.rule=hostregexp(`{host:.+}`, `{subdomain:[a-z]+}.example.com`)"
        # .. coming from entrypoint web ..
        - "traefik.http.routers.http_testMasamuneFr_Helloworld_Router.entrypoints=web"
        # .. use the previously created middleware
        - "traefik.http.routers.http_testMasamuneFr_Helloworld_Router.middlewares=redirect-to-https"

        - "fr.masamune.client='masamune'"
        - "fr.masamune.maintainer='masamune.code@gmail.com'"
        - "fr.masamune.project='curated service helloworld'"
        - "fr.masamune.type='test'"
      mode: replicated
      replicas: 2
      resources:
        limits:
          cpus: '0.50'
          memory: 256M
        reservations:
          cpus: '0.25'
          memory: 128M
      restart_policy:
        condition: any
        delay: 5s
        max_attempts: 3
        window: 120s
      rollback_config:
        delay: 0s
        failure_action: pause
        max_failure_ratio: 0
        monitor: 0s
        order: stop-first
        parallelism: 1
      update_config:
        delay: 10s
        failure_action: pause
        max_failure_ratio: 0
        monitor: 0s
        order: stop-first
        parallelism: 1
    image: tutum/hello-world:latest
    networks:
      # Connect to traefik dedicated overlay network, allow reverse proxy
      - traefik-public
    # Optionnal / Specify a FREE external port
    # ports:
    #   - "15000:80"

networks:
  traefik-public:
    # Connect to an existing network
    external: true